// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetesingressnginx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ControllerPublishServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ControllerPublishServiceArgs Empty = new ControllerPublishServiceArgs();

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Allows overriding of the publish service to bind to. Must be &lt;namespace&gt;/&lt;service_name&gt;.
     * 
     */
    @Import(name="pathOverride")
    private @Nullable Output<String> pathOverride;

    /**
     * @return Allows overriding of the publish service to bind to. Must be &lt;namespace&gt;/&lt;service_name&gt;.
     * 
     */
    public Optional<Output<String>> pathOverride() {
        return Optional.ofNullable(this.pathOverride);
    }

    private ControllerPublishServiceArgs() {}

    private ControllerPublishServiceArgs(ControllerPublishServiceArgs $) {
        this.enabled = $.enabled;
        this.pathOverride = $.pathOverride;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ControllerPublishServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ControllerPublishServiceArgs $;

        public Builder() {
            $ = new ControllerPublishServiceArgs();
        }

        public Builder(ControllerPublishServiceArgs defaults) {
            $ = new ControllerPublishServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param pathOverride Allows overriding of the publish service to bind to. Must be &lt;namespace&gt;/&lt;service_name&gt;.
         * 
         * @return builder
         * 
         */
        public Builder pathOverride(@Nullable Output<String> pathOverride) {
            $.pathOverride = pathOverride;
            return this;
        }

        /**
         * @param pathOverride Allows overriding of the publish service to bind to. Must be &lt;namespace&gt;/&lt;service_name&gt;.
         * 
         * @return builder
         * 
         */
        public Builder pathOverride(String pathOverride) {
            return pathOverride(Output.of(pathOverride));
        }

        public ControllerPublishServiceArgs build() {
            return $;
        }
    }

}
