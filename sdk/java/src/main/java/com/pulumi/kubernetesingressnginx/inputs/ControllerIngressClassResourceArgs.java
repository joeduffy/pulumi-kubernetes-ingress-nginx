// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetesingressnginx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ControllerIngressClassResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ControllerIngressClassResourceArgs Empty = new ControllerIngressClassResourceArgs();

    @Import(name="controllerValue")
    private @Nullable Output<String> controllerValue;

    public Optional<Output<String>> controllerValue() {
        return Optional.ofNullable(this.controllerValue);
    }

    @Import(name="default")
    private @Nullable Output<Boolean> default_;

    public Optional<Output<Boolean>> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,Map<String,String>>> parameters;

    /**
     * @return Parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
     * 
     */
    public Optional<Output<Map<String,Map<String,String>>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private ControllerIngressClassResourceArgs() {}

    private ControllerIngressClassResourceArgs(ControllerIngressClassResourceArgs $) {
        this.controllerValue = $.controllerValue;
        this.default_ = $.default_;
        this.enabled = $.enabled;
        this.name = $.name;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ControllerIngressClassResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ControllerIngressClassResourceArgs $;

        public Builder() {
            $ = new ControllerIngressClassResourceArgs();
        }

        public Builder(ControllerIngressClassResourceArgs defaults) {
            $ = new ControllerIngressClassResourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder controllerValue(@Nullable Output<String> controllerValue) {
            $.controllerValue = controllerValue;
            return this;
        }

        public Builder controllerValue(String controllerValue) {
            return controllerValue(Output.of(controllerValue));
        }

        public Builder default_(@Nullable Output<Boolean> default_) {
            $.default_ = default_;
            return this;
        }

        public Builder default_(Boolean default_) {
            return default_(Output.of(default_));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters Parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,Map<String,String>>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,Map<String,String>> parameters) {
            return parameters(Output.of(parameters));
        }

        public ControllerIngressClassResourceArgs build() {
            return $;
        }
    }

}
