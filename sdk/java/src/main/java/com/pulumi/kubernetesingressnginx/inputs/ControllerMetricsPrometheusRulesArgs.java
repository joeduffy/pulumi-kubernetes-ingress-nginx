// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetesingressnginx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ControllerMetricsPrometheusRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ControllerMetricsPrometheusRulesArgs Empty = new ControllerMetricsPrometheusRulesArgs();

    @Import(name="additionalLabels")
    private @Nullable Output<Map<String,String>> additionalLabels;

    public Optional<Output<Map<String,String>>> additionalLabels() {
        return Optional.ofNullable(this.additionalLabels);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="rules")
    private @Nullable Output<List<Map<String,String>>> rules;

    public Optional<Output<List<Map<String,String>>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private ControllerMetricsPrometheusRulesArgs() {}

    private ControllerMetricsPrometheusRulesArgs(ControllerMetricsPrometheusRulesArgs $) {
        this.additionalLabels = $.additionalLabels;
        this.enabled = $.enabled;
        this.namespace = $.namespace;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ControllerMetricsPrometheusRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ControllerMetricsPrometheusRulesArgs $;

        public Builder() {
            $ = new ControllerMetricsPrometheusRulesArgs();
        }

        public Builder(ControllerMetricsPrometheusRulesArgs defaults) {
            $ = new ControllerMetricsPrometheusRulesArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalLabels(@Nullable Output<Map<String,String>> additionalLabels) {
            $.additionalLabels = additionalLabels;
            return this;
        }

        public Builder additionalLabels(Map<String,String> additionalLabels) {
            return additionalLabels(Output.of(additionalLabels));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public Builder rules(@Nullable Output<List<Map<String,String>>> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(List<Map<String,String>> rules) {
            return rules(Output.of(rules));
        }

        public Builder rules(Map<String,String>... rules) {
            return rules(List.of(rules));
        }

        public ControllerMetricsPrometheusRulesArgs build() {
            return $;
        }
    }

}
