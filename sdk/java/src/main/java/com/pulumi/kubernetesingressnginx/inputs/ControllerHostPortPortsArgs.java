// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetesingressnginx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ControllerHostPortPortsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ControllerHostPortPortsArgs Empty = new ControllerHostPortPortsArgs();

    @Import(name="http")
    private @Nullable Output<Integer> http;

    public Optional<Output<Integer>> http() {
        return Optional.ofNullable(this.http);
    }

    @Import(name="https")
    private @Nullable Output<Integer> https;

    public Optional<Output<Integer>> https() {
        return Optional.ofNullable(this.https);
    }

    private ControllerHostPortPortsArgs() {}

    private ControllerHostPortPortsArgs(ControllerHostPortPortsArgs $) {
        this.http = $.http;
        this.https = $.https;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ControllerHostPortPortsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ControllerHostPortPortsArgs $;

        public Builder() {
            $ = new ControllerHostPortPortsArgs();
        }

        public Builder(ControllerHostPortPortsArgs defaults) {
            $ = new ControllerHostPortPortsArgs(Objects.requireNonNull(defaults));
        }

        public Builder http(@Nullable Output<Integer> http) {
            $.http = http;
            return this;
        }

        public Builder http(Integer http) {
            return http(Output.of(http));
        }

        public Builder https(@Nullable Output<Integer> https) {
            $.https = https;
            return this;
        }

        public Builder https(Integer https) {
            return https(Output.of(https));
        }

        public ControllerHostPortPortsArgs build() {
            return $;
        }
    }

}
