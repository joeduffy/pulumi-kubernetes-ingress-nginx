// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetesingressnginx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ControllerServiceNodePortsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ControllerServiceNodePortsArgs Empty = new ControllerServiceNodePortsArgs();

    @Import(name="http")
    private @Nullable Output<String> http;

    public Optional<Output<String>> http() {
        return Optional.ofNullable(this.http);
    }

    @Import(name="https")
    private @Nullable Output<String> https;

    public Optional<Output<String>> https() {
        return Optional.ofNullable(this.https);
    }

    @Import(name="tcp")
    private @Nullable Output<Map<String,Map<String,String>>> tcp;

    public Optional<Output<Map<String,Map<String,String>>>> tcp() {
        return Optional.ofNullable(this.tcp);
    }

    @Import(name="udp")
    private @Nullable Output<Map<String,Map<String,String>>> udp;

    public Optional<Output<Map<String,Map<String,String>>>> udp() {
        return Optional.ofNullable(this.udp);
    }

    private ControllerServiceNodePortsArgs() {}

    private ControllerServiceNodePortsArgs(ControllerServiceNodePortsArgs $) {
        this.http = $.http;
        this.https = $.https;
        this.tcp = $.tcp;
        this.udp = $.udp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ControllerServiceNodePortsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ControllerServiceNodePortsArgs $;

        public Builder() {
            $ = new ControllerServiceNodePortsArgs();
        }

        public Builder(ControllerServiceNodePortsArgs defaults) {
            $ = new ControllerServiceNodePortsArgs(Objects.requireNonNull(defaults));
        }

        public Builder http(@Nullable Output<String> http) {
            $.http = http;
            return this;
        }

        public Builder http(String http) {
            return http(Output.of(http));
        }

        public Builder https(@Nullable Output<String> https) {
            $.https = https;
            return this;
        }

        public Builder https(String https) {
            return https(Output.of(https));
        }

        public Builder tcp(@Nullable Output<Map<String,Map<String,String>>> tcp) {
            $.tcp = tcp;
            return this;
        }

        public Builder tcp(Map<String,Map<String,String>> tcp) {
            return tcp(Output.of(tcp));
        }

        public Builder udp(@Nullable Output<Map<String,Map<String,String>>> udp) {
            $.udp = udp;
            return this;
        }

        public Builder udp(Map<String,Map<String,String>> udp) {
            return udp(Output.of(udp));
        }

        public ControllerServiceNodePortsArgs build() {
            return $;
        }
    }

}
